"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs = require("fs");
var virtual_core_1 = require("virtual-core");
var SampleUtterancesBuilder = (function () {
    function SampleUtterancesBuilder() {
    }
    SampleUtterancesBuilder.fromFile = function (file) {
        var data = fs.readFileSync(file);
        var utterances = new virtual_core_1.SampleUtterances();
        SampleUtterancesBuilder.parseFlatFile(utterances, data.toString());
        return utterances;
    };
    SampleUtterancesBuilder.fromJSON = function (sampleUtterancesJSON) {
        var sampleUtterances = new virtual_core_1.SampleUtterances();
        for (var _i = 0, _a = Object.keys(sampleUtterancesJSON); _i < _a.length; _i++) {
            var intent = _a[_i];
            for (var _b = 0, _c = sampleUtterancesJSON[intent]; _b < _c.length; _b++) {
                var sample = _c[_b];
                sampleUtterances.addSample(intent, sample);
            }
        }
        return sampleUtterances;
    };
    SampleUtterancesBuilder.parseFlatFile = function (utterances, fileData) {
        var lines = fileData.split("\n");
        for (var _i = 0, lines_1 = lines; _i < lines_1.length; _i++) {
            var line = lines_1[_i];
            if (line.trim().length === 0) {
                continue;
            }
            var index = line.indexOf(" ");
            if (index === -1) {
                throw Error("Invalid sample utterance: " + line);
            }
            var intent = line.substr(0, index);
            var sample = line.substr(index).trim();
            utterances.addSample(intent, sample);
        }
    };
    return SampleUtterancesBuilder;
}());
exports.SampleUtterancesBuilder = SampleUtterancesBuilder;
//# sourceMappingURL=SampleUtterancesBuilder.js.map