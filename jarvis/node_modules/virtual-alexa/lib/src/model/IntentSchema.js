"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs = require("fs");
var virtual_core_1 = require("virtual-core");
var IntentSchema = (function () {
    function IntentSchema(schemaJSON) {
        this.schemaJSON = schemaJSON;
    }
    IntentSchema.fromFile = function (file) {
        var data = fs.readFileSync(file);
        var json = JSON.parse(data.toString());
        return IntentSchema.fromJSON(json);
    };
    IntentSchema.fromJSON = function (schemaJSON) {
        return new IntentSchema(schemaJSON);
    };
    IntentSchema.prototype.intents = function () {
        var intentArray = [];
        for (var _i = 0, _a = this.schemaJSON.intents; _i < _a.length; _i++) {
            var intentJSON = _a[_i];
            var intent = new virtual_core_1.Intent(intentJSON.intent);
            if (intentJSON.slots !== undefined && intentJSON.slots !== null) {
                for (var _b = 0, _c = intentJSON.slots; _b < _c.length; _b++) {
                    var slotJSON = _c[_b];
                    intent.addSlot(new virtual_core_1.IntentSlot(slotJSON.name, slotJSON.type));
                }
            }
            intentArray.push(intent);
        }
        return intentArray;
    };
    IntentSchema.prototype.intent = function (intentString) {
        var intent = null;
        for (var _i = 0, _a = this.intents(); _i < _a.length; _i++) {
            var o = _a[_i];
            if (o.name === intentString) {
                intent = o;
                break;
            }
        }
        return intent;
    };
    IntentSchema.prototype.hasIntent = function (intentString) {
        return this.intent(intentString) !== null;
    };
    IntentSchema.prototype.addIntent = function (intent) {
        var matchIntentByName = function (item) {
            return item.intent === intent;
        };
        if (!this.schemaJSON.intents.some(matchIntentByName)) {
            this.schemaJSON.intents.push({ intent: intent });
        }
    };
    return IntentSchema;
}());
exports.IntentSchema = IntentSchema;
//# sourceMappingURL=IntentSchema.js.map