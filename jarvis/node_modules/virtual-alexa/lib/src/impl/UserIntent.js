"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DialogManager_1 = require("../dialog/DialogManager");
var SlotValue_1 = require("./SlotValue");
var UserIntent = (function () {
    function UserIntent(context, name, providedSlotValues) {
        this.context = context;
        this.name = name;
        this.providedSlotValues = providedSlotValues;
    }
    UserIntent.prototype.slots = function () {
        var slots = {};
        var intent = this.context.interactionModel().intentSchema.intent(this.name);
        if (!intent) {
            return slots;
        }
        var intentSlots = intent.slots;
        if (intentSlots) {
            for (var _i = 0, intentSlots_1 = intentSlots; _i < intentSlots_1.length; _i++) {
                var intentSlot = intentSlots_1[_i];
                slots[intentSlot.name] = new SlotValue_1.SlotValue(intentSlot.name, undefined, DialogManager_1.ConfirmationStatus.NONE);
            }
        }
        if (this.providedSlotValues && Object.keys(this.providedSlotValues).length > 0) {
            if (!intentSlots) {
                throw new Error("Trying to add slot to intent that does not have any slots defined");
            }
            for (var _a = 0, _b = Object.keys(this.providedSlotValues); _a < _b.length; _a++) {
                var providedSlot = _b[_a];
                var targetSlot = slots[providedSlot];
                if (!targetSlot) {
                    throw new Error("Trying to add undefined slot to intent: " + providedSlot);
                }
                targetSlot.value = this.providedSlotValues[providedSlot];
                targetSlot.setEntityResolution(this.context, this.name);
            }
        }
        return slots;
    };
    return UserIntent;
}());
exports.UserIntent = UserIntent;
//# sourceMappingURL=UserIntent.js.map