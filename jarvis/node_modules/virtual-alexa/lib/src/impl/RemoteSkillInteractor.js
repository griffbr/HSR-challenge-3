"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var http = require("http");
var https = require("https");
var URL = require("url");
var SkillInteractor_1 = require("./SkillInteractor");
var RemoteSkillInteractor = (function (_super) {
    __extends(RemoteSkillInteractor, _super);
    function RemoteSkillInteractor(urlString, model, locale, applicationID) {
        var _this = _super.call(this, model, locale, applicationID) || this;
        _this.urlString = urlString;
        _this.model = model;
        return _this;
    }
    RemoteSkillInteractor.prototype.invoke = function (requestJSON) {
        var httpModule = this.urlString.startsWith("https") ? https : http;
        var url = URL.parse(this.urlString);
        var requestString = JSON.stringify(requestJSON);
        var requestOptions = {
            headers: {
                "Content-Length": Buffer.byteLength(requestString),
                "Content-Type": "application/json",
            },
            hostname: url.hostname,
            method: "POST",
            path: url.path,
            port: url.port ? parseInt(url.port, 10) : undefined,
        };
        return new Promise(function (resolve, reject) {
            var req = httpModule.request(requestOptions, function (response) {
                if (response.statusCode !== 200) {
                    reject("Invalid response: " + response.statusCode + " Message: " + response.statusMessage);
                    return;
                }
                var responseString = "";
                response.setEncoding("utf8");
                response.on("data", function (chunk) {
                    responseString = responseString + chunk;
                });
                response.on("end", function () {
                    try {
                        var responseJSON = JSON.parse(responseString);
                        resolve(responseJSON);
                    }
                    catch (e) {
                        reject(e);
                    }
                });
            });
            req.on("error", function (e) {
                console.error("problem with request: " + e.message);
                reject(e);
            });
            req.write(requestString);
            req.end();
        });
    };
    return RemoteSkillInteractor;
}(SkillInteractor_1.SkillInteractor));
exports.RemoteSkillInteractor = RemoteSkillInteractor;
//# sourceMappingURL=RemoteSkillInteractor.js.map