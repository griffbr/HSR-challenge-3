"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var file_util_1 = require("../core/file-util");
var IntentSchema = (function () {
    function IntentSchema(schemaJSON) {
        this.schemaJSON = schemaJSON;
    }
    IntentSchema.fromFile = function (file, callback) {
        file_util_1.FileUtil.readFile(file, function (data) {
            if (data !== null) {
                var json = null;
                try {
                    json = JSON.parse(data.toString());
                    var schema = new IntentSchema(json);
                    callback(schema);
                }
                catch (e) {
                    callback(null, "Bad JSON: " + e.message);
                }
            }
            else {
                var error = "File not found: " + file;
                callback(null, error);
            }
        });
    };
    IntentSchema.fromJSON = function (schemaJSON) {
        return new IntentSchema(schemaJSON);
    };
    IntentSchema.prototype.intents = function () {
        var intentArray = [];
        for (var _i = 0, _a = this.schemaJSON.intents; _i < _a.length; _i++) {
            var intentJSON = _a[_i];
            var intent = new Intent(intentJSON.intent);
            if (intentJSON.slots !== undefined && intentJSON.slots !== null) {
                for (var _b = 0, _c = intentJSON.slots; _b < _c.length; _b++) {
                    var slotJSON = _c[_b];
                    intent.addSlot(new IntentSlot(slotJSON.name, slotJSON.type));
                }
            }
            intentArray.push(intent);
        }
        return intentArray;
    };
    IntentSchema.prototype.intent = function (intentString) {
        var intent = null;
        for (var _i = 0, _a = this.intents(); _i < _a.length; _i++) {
            var o = _a[_i];
            if (o.name === intentString) {
                intent = o;
                break;
            }
        }
        return intent;
    };
    IntentSchema.prototype.hasIntent = function (intentString) {
        return this.intent(intentString) !== null;
    };
    return IntentSchema;
}());
exports.IntentSchema = IntentSchema;
var Intent = (function () {
    function Intent(name) {
        this.name = name;
        this.builtin = false;
        this.slots = null;
        if (this.name.indexOf("AMAZON") !== -1) {
            this.builtin = true;
        }
    }
    Intent.prototype.addSlot = function (slot) {
        if (this.slots === null) {
            this.slots = [];
        }
        this.slots.push(slot);
    };
    return Intent;
}());
exports.Intent = Intent;
var IntentSlot = (function () {
    function IntentSlot(name, type) {
        this.name = name;
        this.type = type;
    }
    return IntentSlot;
}());
exports.IntentSlot = IntentSlot;
//# sourceMappingURL=intent-schema.js.map