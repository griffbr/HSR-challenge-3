"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var intent_schema_1 = require("./intent-schema");
var sample_utterances_1 = require("./sample-utterances");
var InteractionModel = (function () {
    function InteractionModel(intentSchema, sampleUtterances) {
        this.intentSchema = intentSchema;
        this.sampleUtterances = sampleUtterances;
    }
    InteractionModel.fromFiles = function (intentSchemaFile, sampleUtterancesFile, callback) {
        var callbackCount = 0;
        var callbackError = null;
        var intentSchema = null;
        var sampleUtterances = null;
        var done = function (schema, utterances, error) {
            callbackCount++;
            if (schema !== undefined && schema !== null) {
                intentSchema = schema;
            }
            if (utterances !== undefined && utterances !== null) {
                sampleUtterances = utterances;
            }
            if (error !== undefined && error !== null) {
                callbackError = error;
            }
            if (callbackCount === 2) {
                if (callbackError !== null) {
                    callback(null, callbackError);
                }
                else {
                    callback(new InteractionModel(intentSchema, sampleUtterances));
                }
            }
        };
        intent_schema_1.IntentSchema.fromFile(intentSchemaFile, function (schema, error) {
            if (error !== undefined && error !== null) {
                console.error("Error loading Intent Schema!");
                console.error("Cause: " + error);
                console.error();
            }
            done(schema, null, error);
        });
        sample_utterances_1.SampleUtterances.fromFile(sampleUtterancesFile, function (utterances, error) {
            if (error !== undefined && error !== null) {
                console.error("Error loading Sample Utterances!");
                console.error("Cause: " + error);
                console.error();
            }
            done(null, utterances, error);
        });
    };
    InteractionModel.prototype.intentForUtterance = function (utterance) {
        return this.sampleUtterances.intentForUtterance(utterance);
    };
    InteractionModel.prototype.hasIntent = function (intent) {
        return this.intentSchema.hasIntent(intent);
    };
    return InteractionModel;
}());
exports.InteractionModel = InteractionModel;
//# sourceMappingURL=interaction-model.js.map