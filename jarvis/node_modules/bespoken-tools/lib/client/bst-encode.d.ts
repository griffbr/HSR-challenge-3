export interface IEncoderConfig {
    bucket: string;
    accessKeyId: string;
    secretAccessKey: string;
    filterVolume?: number;
}
export declare class BSTEncode {
    private static EncoderHost;
    private static EncoderPath;
    private _configuration;
    constructor(configuration: IEncoderConfig);
    encodeFileAndPublish(filePath: string, callback: (error: Error, encodedURL: string) => void): void;
    encodeFileAndPublishAs(filePath: string, outputKey: string, callback: (error: Error, encodedURL: string) => void): void;
    encodeURLAndPublish(sourceURL: string, callback: (error: Error, encodedURL: string) => void): void;
    encodeURLAndPublishAs(sourceURL: string, outputKey: string, callback: (error: Error, encodedURL: string) => void): void;
    private uploadFile(bucket, name, data, callback);
    private callEncode(sourceURL, bucketKey, callback);
    private bucket();
    private static urlForS3(bucket, key);
}
