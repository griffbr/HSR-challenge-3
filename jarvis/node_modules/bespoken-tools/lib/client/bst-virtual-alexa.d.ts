import { SkillContext } from "virtual-alexa";
export declare class BSTVirtualAlexa {
    private skillURL;
    private interactionModel;
    private intentSchemaFile;
    private sampleUtterancesFile;
    private applicationID;
    private locale;
    private userId;
    static DefaultIntentSchemaLocation: string;
    static DefaultSampleUtterancesLocation: string;
    static DefaultInteractionModelLocation: string;
    static DefaultInteractionModel: {
        interactionModel: {
            languageModel: {
                invocationName: string;
                intents: any[];
            };
        };
    };
    private virtualAlexa;
    private interactionModelProvided;
    private sampleUtterancesProvided;
    private intentSchemaProvided;
    private nodeId;
    private static FileTypes;
    private saveSession();
    deleteSession(): void;
    private loadSession();
    constructor(skillURL: string, interactionModel?: string, intentSchemaFile?: string, sampleUtterancesFile?: string, applicationID?: string, locale?: string, userId?: string);
    context(): SkillContext;
    private validateFile(file, fileType);
    private validateJsonFiles(fileLocation, fileType);
    private validateFilesAndBuild(createdEmptyInteractionModelIfNeeded);
    start(createdEmptyInteractionModelIfNeeded?: boolean): void;
    spoken(phrase: string, callback?: (error: any, response: any, request: any) => void): BSTVirtualAlexa;
    intended(intentName: string, slots?: {
        [id: string]: string;
    }, callback?: (error: any, response: any, request: any) => void): BSTVirtualAlexa;
    launched(callback?: (error: any, response: any, request: any) => void): BSTVirtualAlexa;
}
