/// <reference types="node" />
import { LambdaConfig } from "./lambda-config";
export declare class LambdaDeploy {
    lambdaFolder: string;
    lambdaConfig: LambdaConfig;
    static create(lambdaFolder: string, lambdaConfig: LambdaConfig): LambdaDeploy;
    deploy(callback?: (err: Error) => any): void;
    private logParams(params);
    uploadExisting(lambda: any, params: any, callback: (err: Error, result: string) => any): any;
    uploadNew(lambda: any, params: any, callback: (err: Error, result: string) => any): any;
    private params(buffer);
    private archive(callback);
    private buildAndArchive(callback);
    private postInstallScript(codeDirectory, callback);
    npmInstall(codeDirectory: string, callback: (err: Error) => any): void;
    private archivePrebuilt(callback);
    private codeDirectory;
    nativeZipFiles: (codeDirectory: string, callback: (err: Error, buffer?: Buffer) => any) => void;
    zipFiles: (codeDirectory: string, callback: (err: Error, buffer?: Buffer) => any) => void;
    copyFiles(src: string, dest: string, excludeNodeModules: boolean, callback: (err: Error) => any): void;
    cleanDirectory(codeDirectory: string, callback: (err: Error) => any): void;
}
