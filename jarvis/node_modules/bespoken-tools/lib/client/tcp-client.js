"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var net = require("net");
var global_1 = require("../core/global");
var logging_helper_1 = require("../core/logging-helper");
var Logger = "TCP-CLIENT";
var TCPClient = (function () {
    function TCPClient(id) {
        this.id = id;
    }
    TCPClient.prototype.transmit = function (host, port, requestData, callback) {
        var self = this;
        var client = new net.Socket();
        logging_helper_1.LoggingHelper.info(Logger, "Forwarding " + host + ":" + port);
        client.on("error", function (e) {
            console.log("TCPClient Error: " + e.message);
            if (e.code === "ECONNREFUSED") {
                callback(null, global_1.NetworkErrorType.CONNECTION_REFUSED, e.message);
            }
            else {
                callback(null, global_1.NetworkErrorType.OTHER, e.message);
            }
        });
        client.connect(port, host, function () {
            client.write(requestData);
        });
        client.on("data", function (incomingData) {
            callback(incomingData, null, null);
        });
        client.on("close", function (had_error) {
            logging_helper_1.LoggingHelper.debug(Logger, "Connection closed ID: " + self.id + " HadError: " + had_error);
            if (self.onCloseCallback !== undefined && self.onCloseCallback !== null) {
                self.onCloseCallback();
            }
        });
    };
    TCPClient.prototype.close = function () {
    };
    return TCPClient;
}());
exports.TCPClient = TCPClient;
//# sourceMappingURL=tcp-client.js.map