export declare const SOURCE_API_URL: string;
export declare class BstStatistics {
    static FLUSH_TIME: number;
    static singleton: BstStatistics;
    statisticsContext: StatisticsContext;
    timer: any;
    constructor();
    static instance(): BstStatistics;
    start(): void;
    stop(): void;
    record(command: string, event?: string, nodeId?: string, version?: string, flushed?: (error?: Error) => void): void;
}
export declare class StatisticsContext {
    private _queue;
    record(command: string, event?: string, nodeId?: string, version?: string): void;
    flush(flushed?: (error?: Error) => void): void;
    transmit(logBatch: any, flushed?: (error?: Error) => void): void;
}
export declare class BstStat {
    command: string;
    event: string;
    nodeId: string;
    version: string;
    _timestamp: Date;
    constructor(command: string, event?: string, nodeId?: string, version?: string);
    timestampAsISOString(): string;
}
export declare const BstCommand: {
    utter: string;
    intend: string;
    speak: string;
    proxy: string;
    test: string;
    launch: string;
};
export declare const BstEvent: {
    connect: string;
    forwarded: string;
    dropped: string;
};
