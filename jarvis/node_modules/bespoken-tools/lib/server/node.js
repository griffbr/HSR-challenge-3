"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var socket_handler_1 = require("../core/socket-handler");
var logging_helper_1 = require("../core/logging-helper");
var Logger = "NODE";
var Node = (function () {
    function Node(id, socketHandler) {
        this.id = id;
        this.socketHandler = socketHandler;
        this.requests = {};
    }
    Node.prototype.forward = function (request) {
        console.log("NODE " + this.id + " MSG-ID: " + request.id() + " Forwarding");
        this.requests[request.id()] = request;
        this.socketHandler.send(new socket_handler_1.SocketMessage(request.rawContents, request.id()));
    };
    Node.prototype.handlingRequest = function () {
        return (Object.keys(this.requests).length > 0);
    };
    Node.prototype.onReply = function (socketMessage) {
        var self = this;
        console.log("NODE " + this.id + " MSG-ID: " + socketMessage.getMessageID() + " ReplyReceived");
        var request = this.requests[socketMessage.getMessageID()];
        if (request === null) {
            logging_helper_1.LoggingHelper.info(Logger, "No matching messageID for reply: " + socketMessage.getMessageID());
        }
        else {
            delete self.requests[socketMessage.getMessageID()];
            try {
                request.sourceSocket.write(socketMessage.getMessage());
            }
            catch (e) {
                logging_helper_1.LoggingHelper.error(Logger, "Error writing: " + e);
            }
        }
    };
    return Node;
}());
exports.Node = Node;
//# sourceMappingURL=node.js.map