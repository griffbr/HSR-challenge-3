import { LoglessContext } from "../logless/logless-context";
export declare class Logless {
    static Domain: string;
    private static captureConsole;
    static capture(source: string, handler: Function): Function;
    static logger(source: string): LoglessContext;
    static middleware(source: string): LoglessMiddleware;
    static enableConsoleLogging(): void;
    static disableConsoleLogging(): void;
}
export declare class LoglessMiddleware {
    requestHandler: ExpressRequestHandler;
    errorHandler: ExpressErrorHandler;
    constructor(requestHandler: ExpressRequestHandler, errorHandler: ExpressErrorHandler);
}
export interface LambdaFunction {
    (event: any, context: any, callback?: (error?: Error, result?: any) => void): void;
}
export interface CloudFunction {
    (request: any, response: any): void;
}
export interface ExpressRequestHandler {
    (req: any, res: any, next: Function): any;
}
export interface ExpressErrorHandler {
    (err: any, req: any, res: any, next: Function): any;
}
