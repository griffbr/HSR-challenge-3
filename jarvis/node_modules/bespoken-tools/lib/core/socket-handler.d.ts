/// <reference types="node" />
import { Socket } from "net";
export declare class SocketHandler {
    socket: Socket;
    private onMessage;
    buffer: Buffer;
    onDataCallback: (data: Buffer) => void;
    onCloseCallback: () => void;
    private connected;
    static connect(host: string, port: number, onConnect: (error?: any) => void, onMessage: (socketMessage: SocketMessage) => void): SocketHandler;
    constructor(socket: Socket, onMessage: (socketMessage: SocketMessage) => void);
    private handleData(data);
    send(socketMessage: SocketMessage): void;
    remoteAddress(): string;
    remoteEndPoint(): string;
    disconnect(): void;
    isOpen(): boolean;
}
export declare class SocketMessage {
    private sequenceNumber;
    private message;
    constructor(message: string | Buffer, sequenceNumber?: number);
    getMessageID(): number;
    asString(): string;
    isString(): boolean;
    isJSON(): boolean;
    asJSON(): any;
    messageForLogging(): string;
    getMessage(): Buffer;
    getFullMessage(): Buffer;
    contains(stringToFind: string): boolean;
}
